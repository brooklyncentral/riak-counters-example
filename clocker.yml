#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#     http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

id: riak-nodejs-cluster
name: Riak Cluster with Node.js Webapp Cluster
origin: "https://github.com/apache/incubator-brooklyn/"

locations:
- my-docker-cloud

services:
- type: brooklyn.networking.VirtualNetwork
  networkId: public
- type: brooklyn.networking.VirtualNetwork
  networkId: riak

- type: brooklyn.entity.nosql.riak.RiakCluster
  initialSize: 3
  id: cluster
  brooklyn.config:
    install.version: 2.0.5
    riak.networking.optimize: false
    network.list:
    - riak

- type: brooklyn.entity.webapp.ControlledDynamicWebAppCluster
  name: Web Cluster
  brooklyn.config:
    initialSize: 2
    dynamiccluster.memberspec:
      $brooklyn:entitySpec:
        type: brooklyn.entity.webapp.nodejs.NodeJsWebAppService
        id: riak-counters-example
        name: "Riak Counters Node.js Example"
        brooklyn.config:
          appName: riak-counters-example
          gitRepoUrl:
            "https://github.com/csabapalfi/riak-counters-example"
          appFileName: index.js
          docker.directPorts:
          - 3000
          docker.openPorts:
          - 3000
          shell.env:
            RIAK_NODES: >
              $brooklyn:component("cluster").attributeWhenReady("riak.cluster.nodeListPbPort")
            PORT: 3000
          network.list:
          - webapp
    controlleddynamicwebappcluster.controllerSpec:
      $brooklyn:entitySpec:
        type: brooklyn.entity.proxy.haproxy.HAProxyController
        brooklyn.config:
          docker.image.name: haproxy
          docker.image.tag: 1.5.9
          install.dir: /usr/local/sbin/
          run.dir: /usr/local/etc/haproxy/
          network.list:
          - webapp
          - public
          member.sensor.hostname: "host.subnet.hostname"
